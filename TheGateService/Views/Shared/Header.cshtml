@using TheGateService.Types
@using TheGateService.Utilities

@{
    var session = Html.GetAuthSession();
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#navbar-search .search-query').typeahead({
            source: function (query, process) {
                return $.get('/typeahead', { q: query }, function (data) {
                    console.log(JSON.stringify(data));
                    var results = data.results.map(function (item) {
                        return JSON.stringify({ name: item.name, url: item.url });
                    });
                    console.log(results);
                    return process(results);
                });
            },
            matcher: function (obj) {
                var item = JSON.parse(obj);
                return ~item.name.toLowerCase().indexOf(this.query.toLowerCase());
            },
            sorter: function (items) {
                var beginswith = [], caseSensitive = [], caseInsensitive = [], item, aItem;
                while (aItem = items.shift()) {
                    item = JSON.parse(aItem);
                    if (!item.name.toLowerCase().indexOf(this.query.toLowerCase)) beginswith.push(JSON.stringify(item));
                    else if (~item.name.indexOf(this.query)) caseSensitive.push(JSON.stringify(item));
                    else caseInsensitive.push(JSON.stringify(item));
                }
                return beginswith.concat(caseSensitive, caseInsensitive);
            },
            highlighter: function (obj) {
                // Bold all search query matches
                var item = JSON.parse(obj);
                var query = this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, '\\$&');
                return item.name.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {
                    return '<b>' + match + '</b>';
                });
            },
            updater: function (obj) {
                // When an item is selected in the dropdown, navigate to that item's product page.
                var item = JSON.parse(obj);
                window.location.href = item.url;
                return item.name;
            }
        });
    });
</script>
<header id="header" class="navbar">
    <div class="navbar-inner">
        <a class="brand" href='@Url.Content("~/home")'>The Gate</a>
        <div class="navbar-search pull-right" id="navbar-search">
            <input type="text" class="search-query" placeholder="Search" autocomplete="off" data-provide="typeahead"/>
        </div>
        @if (session.IsAuthenticated) {
            <ul class="nav pull-right">
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                        Welcome, @session.FirstName!
                        <b class="caret"></b>
                    </a>
                    <ul class="dropdown-menu">
                        @if (session.HasRole(UserType.Administrator.ToString())) {
                            <li><a href='@Url.Content("~/admin")'>Product Management</a></li>
                        }
                        <li><a href='@Url.Content("~/logout")'><i class="icon-cog"></i> Logout</a></li>
                    </ul>
                </li>
            </ul>
        } else {
            <form id="login" class="navbar-form pull-right" action='@Url.Content("~/Login")' method="POST">
                <input name="username" type="text" placeholder="Username"/>
                <input name="password" type="password" placeholder="Password"/>
                <input class="btn btn-info" type="submit" value="Login"/>
            </form>
        }
    </div>
</header>
